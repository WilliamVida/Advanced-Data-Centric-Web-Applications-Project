package com.sales.services;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sales.exceptions.CustomerDoesNotExistException;
import com.sales.exceptions.OrderQuantityException;
import com.sales.exceptions.ProductDoesNotExistException;
import com.sales.models.Customer;
import com.sales.models.Order;
import com.sales.models.Product;
import com.sales.repositories.CustomerRepository;
import com.sales.repositories.OrderRepository;
import com.sales.repositories.ProductRepository;

@Service
public class OrderService {

	@Autowired
	OrderRepository or;

	@Autowired
	CustomerRepository cr;

	@Autowired
	ProductRepository pr;

	private String pattern = "yyyy-MM-dd";
	private SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);

	public ArrayList<Order> findAll() {
		return (ArrayList<Order>) or.findAll();
	}

	public void save(Order o) throws OrderQuantityException, CustomerDoesNotExistException, ProductDoesNotExistException {
		String date = simpleDateFormat.format(new Date());

		Customer c = new Customer();
		c = cr.findOne(o.getCust().getcId());
		System.out.println(c);
		
		Product p = new Product();
		p = pr.findOne(o.getProd().getpId());

		if (o.getQty() > p.getQtyInStock()) {
			throw new OrderQuantityException("Quantity too large: Product stock = " + p.getQtyInStock());
		} else if (o.getCust().getcId() == null) {
			throw new CustomerDoesNotExistException("Customer: " + o.getCust().getcId() + " does not exist");
			// throw new ProductDoesNotExistException("Product: " + p.getpId() + " does not
			// exist");
		} else {
			System.out.println("Order success.");
			System.out.println("Order Quantity " + o.getQty());
			System.out.println("Stock Quantity " + p.getQtyInStock());

			p.setQtyInStock(p.getQtyInStock() - o.getQty());

			o.setOrderDate(date);
			or.save(o);
		}

	}

}
